//------------------------------------
//  $MIXINS
//------------------------------------

/// Font Sizing: Use REMs with a pixel fallback for font sizing.
/// Adapted from [Inuit CSS](https://github.com/inuitcss)
/// @link https://github.com/inuitcss/tools.mixins/blob/master/_tools.mixins.scss
/// @group Fonts
/// @param {string} $size - Font size in Pixels. Ex. 16px
/// @param {string} $height [auto] - Line height for the font
/// @output font-size: 16px; <br/> font-size: 1rem; <br/> line-height: auto;
@mixin font-size($size, $height: auto) {
  font-size: $size;
  font-size: ($size / $font-size) * 1rem;

  @if $height == auto {
    line-height: ceil($size / $line-height) * ($line-height / $size);
  }

  @else {

    @if (type-of($height) == number or $height == inherit or $height == normal) {
      line-height: $height;
    }

    @elseif ($height != none and $height != false) {
      @warn "D’oh! ‘#{$height}’ is not a valid value for `line-height`."
    }

  }

}

/// Make list flush to the left side
/// @group Lists
@mixin list-flush() {
  margin: 0;
  padding: 0;
}

/// Reset lists to that they have no styling
@mixin reset-list() {
  @include list-flush();
  list-style: none;

  li {
    list-style: none;
  }
}

/// Hide text for image replacement
@mixin hide-text() {
  text-indent: 110%;
  white-space: nowrap;
  overflow: hidden;
}

/// Create a circle border around an element
/// @param {string} $border-size [1px] - Border size of the circle
/// @param {string} $border-color [$brand--gray] - Color used for the border
@mixin circle-border($border-size: 1px, $border-color: $brand--gray) {
  border: $border-size solid $border-color;
  border-radius: 50%;
}

/// Create a circular elements
/// @param {string} $width - Diameter of the circle
/// @param {string} $color - Color of the circle
@mixin circle($width, $color: "") {
  width: $width;
  height: $width;
  background: #{$color};
  border-radius: $width / 2;
}

/// Transform scale smoothes rough borders in some browsers (aka Firefox)
@mixin force-anti-alias() {
  transform: scale(.9999);
}

/// Remove default form input styles
@mixin remove-input-style() {
  height: auto;
  box-shadow: none;
}

/// Hide Visually
@mixin hide-visually() {
  border: 0;
  clip: rect(1px, 1px, 1px, 1px);
  height: 1px;
  overflow: hidden;
  padding: 0;
  position: absolute;
  width: 1px;
}

/// Show Visually
@mixin show-visually() {
  clip: auto;
  height: auto;
  position: inherit;
  width: auto;
}

// Primary Link Styling
@mixin link-style() {
  color: $link-color;
  text-decoration: underline;

  &:hover {
    color: $link-color-hover;
    text-decoration: none;
  }
}

// Secondary Link Styling
@mixin link-style-secondary() {
  color: $link-color--secondary;
  text-decoration: underline;

  &:hover {
    color: $link-color-hover--secondary;
    text-decoration: none;
  }
}
