//------------------------------------
//  $MIXINS
//------------------------------------

// Fluid Typography
// @link https://css-tricks.com/snippets/css/fluid-typography/
@function strip-unit($value) {
  @return $value / ($value * 0 + 1);
}

@mixin fluid-type($min-vw, $max-vw, $min-font-size, $max-font-size) {
  $u1: unit($min-vw);
  $u2: unit($max-vw);
  $u3: unit($min-font-size);
  $u4: unit($max-font-size);

  @if $u1 == $u2 and $u1 == $u3 and $u1 == $u4 {
    & {
      font-size: $min-font-size;
      @media screen and (min-width: $min-vw) {
        font-size: calc(#{$min-font-size} + #{strip-unit($max-font-size - $min-font-size)} * ((100vw - #{$min-vw}) / #{strip-unit($max-vw - $min-vw)}));
      }
      @media screen and (min-width: $max-vw) {
        font-size: $max-font-size;
      }
    }
  }
}

/// Make list flush to the left side
/// @group Lists
@mixin list-flush() {
  margin: 0;
  padding: 0;
}

/// Reset lists to that they have no styling
@mixin reset-list() {
  @include list-flush();
  list-style: none;

  li {
    list-style: none;
  }
}

/// Hide text for image replacement
@mixin hide-text() {
  text-indent: 110%;
  white-space: nowrap;
  overflow: hidden;
}

/// Create a circle border around an element
/// @param {string} $border-size [1px] - Border size of the circle
/// @param {string} $border-color [$brand--gray] - Color used for the border
@mixin circle-border($border-size: 1px, $border-color: $brand--gray) {
  border: $border-size solid $border-color;
  border-radius: 50%;
}

/// Create a circular elements
/// @param {string} $width - Diameter of the circle
/// @param {string} $color - Color of the circle
@mixin circle($width, $color: "") {
  width: $width;
  height: $width;
  background: #{$color};
  border-radius: $width / 2;
}

/// Transform scale smoothes rough borders in some browsers (aka Firefox)
@mixin force-anti-alias() {
  transform: scale(.9999);
}

/// Remove default form input styles
@mixin remove-input-style() {
  height: auto;
  box-shadow: none;
}

/// Hide Visually
@mixin hide-visually() {
  border: 0;
  clip: rect(1px, 1px, 1px, 1px);
  height: 1px;
  overflow: hidden;
  padding: 0;
  position: absolute;
  width: 1px;
}

/// Show Visually
@mixin show-visually() {
  clip: auto;
  height: auto;
  position: inherit;
  width: auto;
}

// Primary Link Styling
@mixin link-style() {
  color: $link-color;
  text-decoration: underline;

  &:hover {
    color: $link-color-hover;
    text-decoration: none;
  }
}

// Secondary Link Styling
@mixin link-style-secondary() {
  color: $link-color--secondary;
  text-decoration: underline;

  &:hover {
    color: $link-color-hover--secondary;
    text-decoration: none;
  }
}
